name: Continuous Integration

on:
  workflow_dispatch:
  push:
    tags: [v*]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
      #if: ${{ github.event_name == 'push' }}
    strategy:
      matrix:
        image: ['postfix', 'opendkim', 'dovecot', 'postfixadmin']
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log into DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: pmphan/mailserver-${{ matrix.image }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.image }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [build-and-push]
    if: |
      always() &&
      (needs.build-and-push.result == 'success' || needs.build-and-push.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Populate docker-compose with ENV
        uses: danielr1996/envsubst-action@1.1.0
        env:
          HOSTNAME: ${{ vars.MAILSERVER_HOST }}
          RELAY_HOST: ${{ vars.RELAY_HOST }}
          RELAY_USER: ${{ secrets.RELAY_USER }}
          RELAY_PASSWORD: ${{ secrets.RELAY_PASSWORD }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTFIXADMIN_PASSWORD: ${{ secrets.POSTFIXADMIN_PASSWORD }}
          DKIM_SELECTOR: ${{ vars.DKIM_SELECTOR }}
        with:
          input: docker-compose.yml
          output: docker-compose.yml

      - name: SCP docker-compose
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ vars.MAILSERVER_HOST }}
          port: 22
          username: ${{ secrets.MAILSERVER_USER }}
          key: ${{ secrets.MAILSERVER_KEY }}
          source: docker-compose.yml
          target: ~/mailserver/

      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        env:
          RELAY_HOST: ${{ vars.RELAY_HOST }}
          RELAY_USERNAME: ${{ secrets.RELAY_USERNAME }}
          RELAY_PASSWORD: ${{ secrets.RELAY_PASSWORD }}
        with:
          host: ${{ vars.MAILSERVER_HOST }}
          port: 22
          username: ${{ secrets.MAILSERVER_USER }}
          key: ${{ secrets.MAILSERVER_KEY }}
          script: cd ~/mailserver/ && docker-compose pull && docker-compose up -d && docker system prune -af
