name: Continuous Integration

on:
  workflow_dispatch:
  push:
    tags: [v*]

jobs:
  build-postfix:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log into DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: pmphan/mailserver-postfix

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: postfix
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-opendkim:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log into DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: pmphan/mailserver-opendkim

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: opendkim
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-postfix
    if: |
      always() &&
      (needs.build-postfix.result == 'success' || needs.build-postfix.result == 'skipped')  &&
      (needs.build-opendkim.result == 'success' || needs.build-opendkim.result == 'skipped') 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: SCP docker-compose
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ vars.MAILSERVER_HOST }}
          port: 22
          username: ${{ secrets.MAILSERVER_USER }}
          key: ${{ secrets.MAILSERVER_KEY }}
          source: docker-compose.yml
          target: /root/mailserver/

      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ vars.MAILSERVER_HOST }}
          port: 22
          username: ${{ secrets.MAILSERVER_USER }}
          key: ${{ secrets.MAILSERVER_KEY }}
          script: cd /root/mailserver/ && docker-compose pull && docker-compose up -d && docker system prune -af
